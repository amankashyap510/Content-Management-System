{"ast":null,"code":"var _jsxFileName = \"/home/aman/Documents/evallo/frontend/evallo/src/components/ContentForm.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ContentForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [mockFileLink, setMockFileLink] = useState('');\n  const [errors, setErrors] = useState({});\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Form validation\n    const validationErrors = {};\n    if (!title.trim()) {\n      validationErrors.title = 'Title is required';\n    }\n    if (!description.trim()) {\n      validationErrors.description = 'Description is required';\n    }\n    if (!mockFileLink.trim()) {\n      validationErrors.mockFileLink = 'Mock File Link is required';\n    }\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/api/content', {\n        title,\n        description,\n        mockFileLink\n      });\n      console.log('Content submitted successfully:', response.data);\n\n      // Reset form fields and errors on successful submission\n      setTitle('');\n      setDescription('');\n      setMockFileLink('');\n      setErrors({});\n    } catch (error) {\n      console.error('Error submitting content:', error.response.data);\n      // Display server validation errors, if any\n      if (error.response.data && error.response.data.error) {\n        setErrors({\n          server: error.response.data.error\n        });\n      } else {\n        setErrors({\n          server: 'Error submitting content. Please try again.'\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errors.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Mock File Link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: mockFileLink,\n        onChange: e => setMockFileLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), errors.mockFileLink && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: errors.mockFileLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), errors.server && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errors.server\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentForm, \"my0U9M+taWFjPI5FvrxZVbOpp9s=\");\n_c = ContentForm;\nexport default ContentForm;\nvar _c;\n$RefreshReg$(_c, \"ContentForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ContentForm","_s","title","setTitle","description","setDescription","mockFileLink","setMockFileLink","errors","setErrors","handleSubmit","e","preventDefault","validationErrors","trim","Object","keys","length","response","post","console","log","data","error","server","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","style","color","_c","$RefreshReg$"],"sources":["/home/aman/Documents/evallo/frontend/evallo/src/components/ContentForm.js"],"sourcesContent":["// frontend/src/components/ContentForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ContentForm = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [mockFileLink, setMockFileLink] = useState('');\n  const [errors, setErrors] = useState({});\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Form validation\n    const validationErrors = {};\n    if (!title.trim()) {\n      validationErrors.title = 'Title is required';\n    }\n    if (!description.trim()) {\n      validationErrors.description = 'Description is required';\n    }\n    if (!mockFileLink.trim()) {\n      validationErrors.mockFileLink = 'Mock File Link is required';\n    }\n\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/content', {\n        title,\n        description,\n        mockFileLink,\n      });\n      console.log('Content submitted successfully:', response.data);\n\n      // Reset form fields and errors on successful submission\n      setTitle('');\n      setDescription('');\n      setMockFileLink('');\n      setErrors({});\n    } catch (error) {\n      console.error('Error submitting content:', error.response.data);\n      // Display server validation errors, if any\n      if (error.response.data && error.response.data.error) {\n        setErrors({ server: error.response.data.error });\n      } else {\n        setErrors({ server: 'Error submitting content. Please try again.' });\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Title:</label>\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} />\n        {errors.title && <p style={{ color: 'red' }}>{errors.title}</p>}\n      </div>\n\n      <div>\n        <label>Description:</label>\n        <textarea value={description} onChange={(e) => setDescription(e.target.value)} />\n        {errors.description && <p style={{ color: 'red' }}>{errors.description}</p>}\n      </div>\n\n      <div>\n        <label>Mock File Link:</label>\n        <input type=\"text\" value={mockFileLink} onChange={(e) => setMockFileLink(e.target.value)} />\n        {errors.mockFileLink && <p style={{ color: 'red' }}>{errors.mockFileLink}</p>}\n      </div>\n\n      {errors.server && <p style={{ color: 'red' }}>{errors.server}</p>}\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default ContentForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}