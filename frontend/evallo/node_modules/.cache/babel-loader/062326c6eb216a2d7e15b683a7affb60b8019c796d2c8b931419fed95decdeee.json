{"ast":null,"code":"var _jsxFileName = \"/home/aman/Documents/evallo/frontend/evallo/src/components/SubmittedContent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmittedContent = () => {\n  _s();\n  const [content, setContent] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/content');\n        setContent(response.data.content);\n      } catch (error) {\n        console.error('Error retrieving content:', error.response.data);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submitted Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: content.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), \" \", item.title, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 52\n        }, this), \" \", item.description, \" |\", ' ', item.mockfilelink && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mock File Link:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.mockfilelink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: item.mockfilelink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n//     <div>\n//       <h2>Submitted Content</h2>\n//       <ul>\n//         {content.map((item) => (\n//           <li key={item._id}>\n//             <strong>Title:</strong> {item.title} <strong>Description:</strong> {item.description} <strong>MockFileLink:</strong> {item.mockFileLink}\n\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n//};\n_s(SubmittedContent, \"JgUUpnk48dqmyAHDMiOj59IyytA=\");\n_c = SubmittedContent;\nexport default SubmittedContent;\nvar _c;\n$RefreshReg$(_c, \"SubmittedContent\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","SubmittedContent","_s","content","setContent","Loading","setLoading","fetchData","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","title","description","mockfilelink","href","target","rel","_id","_c","$RefreshReg$"],"sources":["/home/aman/Documents/evallo/frontend/evallo/src/components/SubmittedContent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SubmittedContent = () => {\n  const [content, setContent] = useState([]);\n  const [Loading, setLoading] = useState(true);\n  \n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/content');\n        setContent(response.data.content);\n      } catch (error) {\n        console.error('Error retrieving content:', error.response.data);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h2>Submitted Content</h2>\n      <ul>\n        {content.map((item) => (\n          <li key={item._id}>\n            <strong>Title:</strong> {item.title} | <strong>Description:</strong> {item.description} |{' '}\n            {item.mockfilelink && (\n              <span>\n                <strong>Mock File Link:</strong>{' '}\n                <a href={item.mockfilelink} target=\"_blank\" rel=\"noopener noreferrer\">\n                  {item.mockfilelink}\n                </a>\n              </span>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n//     <div>\n//       <h2>Submitted Content</h2>\n//       <ul>\n//         {content.map((item) => (\n//           <li key={item._id}>\n//             <strong>Title:</strong> {item.title} <strong>Description:</strong> {item.description} <strong>MockFileLink:</strong> {item.mockFileLink}\n            \n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n//};\n\nexport default SubmittedContent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAG5CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mCAAmC,CAAC;QACrEL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAACP,OAAO,CAAC;MACnC,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACH,QAAQ,CAACE,IAAI,CAAC;MACjE,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACe,GAAG,CAAEC,IAAI,iBAChBnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACC,KAAK,EAAC,KAAG,eAAApB,OAAA;UAAAa,QAAA,EAAQ;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACE,IAAI,CAACE,WAAW,EAAC,IAAE,EAAC,GAAG,EAC5FF,IAAI,CAACG,YAAY,iBAChBtB,OAAA;UAAAa,QAAA,gBACEb,OAAA;YAAAa,QAAA,EAAQ;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAAC,GAAG,eACpCjB,OAAA;YAAGuB,IAAI,EAAEJ,IAAI,CAACG,YAAa;YAACE,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAAZ,QAAA,EAClEM,IAAI,CAACG;UAAY;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACP;MAAA,GATME,IAAI,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAAf,EAAA,CApDMD,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAsDtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}