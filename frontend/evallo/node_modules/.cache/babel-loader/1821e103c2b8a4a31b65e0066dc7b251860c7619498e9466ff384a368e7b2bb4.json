{"ast":null,"code":"var _jsxFileName = \"/home/aman/Documents/evallo/frontend/evallo/src/components/ContentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentList = () => {\n  _s();\n  const [contentList, setContentList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/content');\n        setContentList(response.data.content);\n      } catch (error) {\n        console.error('Error retrieving content:', error.response.data);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contentList.map(content => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: content.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: content.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mock File Link: \", content.mockFileLink]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, content._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentList, \"boNhUpL60mxK4PmZy3IuMm4wF7Y=\");\n_c = ContentList;\nexport default ContentList;\nvar _c;\n$RefreshReg$(_c, \"ContentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ContentList","_s","contentList","setContentList","loading","setLoading","fetchData","response","get","data","content","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","title","description","mockFileLink","_id","_c","$RefreshReg$"],"sources":["/home/aman/Documents/evallo/frontend/evallo/src/components/ContentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst ContentList = () => {\n  const [contentList, setContentList] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/content');\n        setContentList(response.data.content);\n      } catch (error) {\n        console.error('Error retrieving content:', error.response.data);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {contentList.map((content) => (\n            <li key={content._id}>\n              <h3>{content.title}</h3>\n              <p>{content.description}</p>\n              <p>Mock File Link: {content.mockFileLink}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ContentList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,cAAc,CAAC;QAChDL,cAAc,CAACI,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;MACvC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAAC;MACjE,CAAC,SAAS;QACRJ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAc,QAAA,EACGT,OAAO,gBACNL,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBlB,OAAA;MAAAc,QAAA,EACGX,WAAW,CAACgB,GAAG,CAAER,OAAO,iBACvBX,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAKH,OAAO,CAACS;QAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxBlB,OAAA;UAAAc,QAAA,EAAIH,OAAO,CAACU;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BlB,OAAA;UAAAc,QAAA,GAAG,kBAAgB,EAACH,OAAO,CAACW,YAAY;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAHtCP,OAAO,CAACY,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}